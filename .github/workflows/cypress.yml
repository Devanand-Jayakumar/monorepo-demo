name: Run E2E Tests
on:
  push:
    branches: 
     - main
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  cypress-run:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: '${{ github.ref_name }}'
      - name: Install dependencies
        run: npm install
      - name: Install Typescript if using .ts config
        run: npm install --save-dev ts-node typescript
      - name: Run Cypresss from automation folder
        run: |
          npx nx run my-new-app-e2e:e2e
      - name: Install Allure CLI
        run: npm install -g allure-commandline --save-dev
      - name: Generate Allure Reports
        if: always()
        run: >
          npx allure generate apps/frontend/my-new-app-e2e/allure-results
          --clean -o apps/frontend/my-new-app-e2e/allure-report
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: apps/frontend/my-new-app-e2e/allure-report
      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report
      - name: Set datetime-based folder name
        id: time
        run: |
          REPORT_FOLDER=$(date +'%Y-%m-%d_%H-%M')
          echo "REPORT_FOLDER=$REPORT_FOLDER" >> $GITHUB_ENV
      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: '${{ secrets.GITHUB_TOKEN }}'
          publish_dir: ./allure-report
          destination_dir: '${{ env.REPORT_FOLDER }}'
          keep_files: true
      - name: Build reports.json
        run: |
          git fetch origin gh-pages
          git checkout origin/gh-pages -- .
          node -e "const fs=require('fs'); \
          const isRpt=d=>/^[0-9]{4}-[0-9]{2}-[0-9]{2}_[0-9]{2}-[0-9]{2}$/.test(d) && fs.statSync(d).isDirectory(); \
          const dirs=(fs.existsSync('.')?fs.readdirSync('.'):[]).filter(isRpt).sort().reverse(); \
          const out={ generatedAt:new Date().toISOString(), \
          reports: dirs.map(d=>({ folder:d, url:`${d}/index.html` })) }; \
          fs.writeFileSync('reports.json', JSON.stringify(out,null,2));"
      - name: Prepare site files
        run: |
          mkdir -p site-publish
          cp reports.json site-publish/
          cp allure-homepage.html site-publish/index.html
      - name: Deploy reports.json + index.html
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site-publish
          keep_files: true
      - name: Exit after upload
        run: exit 0
