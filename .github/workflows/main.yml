name: Run E2E Tests

on:
   workflow_dispatch:
     inputs:
       branch:
         description: 'Select the branch'
         required: true
         default: main
         type: choice
         options:
           - main
           - develop
       browser:
         description: 'Browser to run on'
         required: true
         default: 'electron'
         type: choice
         options:
           - electron
           - chrome
           - firefox
       environment:
         description: 'Environment for E2E'
         required: true
         default: 'staging'
         type: choice
         options:
           - staging
           - qa
           - prod

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  cypress-run:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
      # Install npm dependencies, cache them correctly
      # and run all Cypress tests
      - name: Install dependencies
        run: npm install
        
      - name: Install Typescript if using .ts config
        run: npm install --save-dev ts-node typescript
        
      - name: Run Cypresss from automation folder
        run: |
          npx ts-node --project apps/frontend/my-new-app-e2e/tsconfig.json node_modules/.bin/cypress run --config-file=apps/frontend/my-new-app-e2e/cypress.config.ts
        continue-on-error: true

      - name: Install Allure CLI
        run: npm install -g allure-commandline --save-dev

      - name: Debug:check allure-results folder exists
        run: ls -R
      
      - name: Generate Allure Reports
        if: always()
        run: |
          npx allure generate allure-results --clean -o allure-report

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
           name: allure-results
           path: allure-results
           
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
           name: allure-report
           path: allure-report

      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report
 
      - name: Set datetime-based folder name
        id: time
        run: |
          REPORT_FOLDER=$(date +'%Y-%m-%d_%H-%M')
          echo "REPORT_FOLDER=$REPORT_FOLDER" >> $GITHUB_ENV
 
      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: ${{ env.REPORT_FOLDER }}
          keep_files: true
 
      - name: Generate styled index.html with logo
        run: |
           mkdir -p index-temp
           cat <<EOF > index-temp/index.html
           <html>
             <head>
               <title>Allure Reports</title>
               <style>
                 body { font-family: Arial, sans-serif; text-align: center; margin-top: 40px; }
                 h1 { font-size: 32px; color: #333; }
                 h2 { font-size: 24px; color: #555; }
                 img { margin-top: 20px; }
                 a { text-decoration: none; color: #1a73e8; }
                 ul { list-style: none; padding: 0; margin-top: 30px; }
                 li { margin-bottom: 10px; }
               </style>
             </head>
             <body>
               <h1>Allure Reports</h1>
               <h2>Test Execution History</h2>
               <a href="./">
                 <img src="https://avatars.githubusercontent.com/u/28248335?s=200&v=4" alt="Allure Logo" width="120" />
               </a>
               <p><a href="./">Click the logo or a date below to view a report</a></p>
               <ul>
           EOF
           
           git fetch origin gh-pages
           git checkout origin/gh-pages -- .
 
           for dir in $(ls -d 20*/ | sort -r); do
             echo "<li><a href='${dir}index.html'>${dir}</a></li>" >> index-temp/index.html
           done
 
           echo "</ul></body></html>" >> index-temp/index.html
      - name: Generate index.html with logo and links to all reports
        run: |
          mkdir -p index-temp
          echo "<html><body><h1>Allure Reports</h1><ul>" > index-temp/index.html
          echo "<h1>Test Reports</h1>" >> index-temp/index.html
          # Add allure logo with link
          echo "<a href='./'><img src='https://raw.githubusercontent.com/allure-framework/allure2/master/allure-generator/src/main/javascript/plugins/behaviors-plugin/static/icon.svg' alt='Allure Logo' width='100'>" >> index-temp/index.html
          echo "<p>Click the logo to go to reports folder.</p>" >> index-temp/index.html
          echo "<ul>" >> index-temp/index.html
          git fetch origin gh-pages
          git checkout origin/gh-pages -- .
          for dir in $(ls -d 20*/ | sort -r); do
            echo "<li><a href='${dir}index.html'>${dir}</a></li>" >> index-temp/index.html
          done
          echo "</ul></body></html>" >> index-temp/index.html
 
      - name: Deploy updated index.html
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./index-temp
          keep_files: true
          
      - name: Exit after upload
        run: exit 0
