name: Run Sonar Qube Scanner on Pull Request
on:
  pull_request:
    branches:
      - main
jobs:
  sonarqube:
    if: ${{ github.actor != 'dependabot[bot]' }}
    continue-on-error: true
    # Vertex GitHub Action can only access AWS SQ server using self-hosted GitHub Runner defined below
    runs-on: [self-hosted, Standard]
    # The Container defined below will run job in it's own Docker container and is the recommended approach
    container:
      image: docker.binrepo.vtxdev.net/cloud-base-images/java17-maven3:latest
      credentials:
        username: ${{ secrets.AF_DOCKER_USER }}
        password: ${{ secrets.AF_DOCKER_PASS }}
    steps:
    - name: Checkout Repo Source for SQ Scanning
      uses: actions/checkout@v2
      # Sonar scanner needs full clone instead of shallow to properly link issues to the history
      with:
        fetch-depth: 0
    # SonarQube Scanner Github Action
    - name: SonarQube Scanner
      uses: sonarsource/sonarqube-scan-action@master
      with:
        # Args can be configured through Args section below or sonar-project.properties in your projectBaseDir
        # -Dsonar.projectKey - ID for the SQ Project (required)
        # -Dsonar.projectName - Name for the SQ Project, typically the same as ID (optional)
        # -Dsonar.pullrequest.base - Required for PRs, Where the PR will be merged to
        # -Dsonar.pullrequest.key - Required for PRs, The PR ID or Number associated with PR
        # -Dsonar.pullrequest.branch - Required for PRs, The PR originating branch
        args: >
          -Dsonar.projectKey=${{env.SQ_PROJECT_NAME}}
          -Dsonar.projectName=${{env.SQ_PROJECT_NAME}}
          -Dsonar.pullrequest.base=${{env.MERGE_BRANCH}}
          -Dsonar.pullrequest.key=${{env.PR_NUMBER}} 
          -Dsonar.pullrequest.branch=${{env.PR_BRANCH}}
          -Dsonar.sources=src
      env:
        # SONAR_TOKEN, SONAR_HOST_URL - ORG defined secrets
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        # SQ_PROJECT_NAME Name of the Project sent over to SQ as projectKey and projectName
        SQ_PROJECT_NAME: "vtx-ui-mf-taxcat"
        # PR ENV Vars needed for SQ Sonar Args
        PR_NUMBER: ${{github.event.pull_request.number}}
        PR_BRANCH: ${{github.head_ref}}
        MERGE_BRANCH: ${{github.base_ref}}
        
