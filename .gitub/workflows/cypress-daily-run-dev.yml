name: Cypress Run on Dev
on:
  workflow_run:
    workflows: ["PR merge workflow"]
    types:
      - completed
jobs:
  cypress-daily-tests:
    runs-on: [self-hosted, Standard]
    env:
      NODE_ENV: 'development'
      DAY_OF_WEEK: 0
      BROWSER: unknown
      PROJECT_KEY: "XRAYTCC"
      TEST_PLAN_KEY: "XRAYTCC-12"
      TEST_EXECUTION_FUNCTIONAL_KEY: "XRAYTCC-577"
      TEST_EXECUTION_E2E_KEY: "XRAYTCC-13"
      EMAIL_RECIPIENT : "nagmani.prasad@vertexinc.com,madhava.maddela@vertexinc.com"
    steps:
      - name: Display Environment
        run: echo $NODE_ENV   
      - name: Get Day of Week
        run: echo "DAY_OF_WEEK=$(date +'%u')" >> $GITHUB_ENV       
      - name: Display Day of Week
        run: echo $DAY_OF_WEEK           
      - name: Set Edge Browser
        if: (env.DAY_OF_WEEK == 1) || (env.DAY_OF_WEEK == 3) ||  (env.DAY_OF_WEEK == 5) || (env.DAY_OF_WEEK == 7) 
        run: echo "BROWSER=edge" >> $GITHUB_ENV
      - name: Set Chrome Browser
        if: (env.DAY_OF_WEEK == 2) || (env.DAY_OF_WEEK == 4) ||  (env.DAY_OF_WEEK == 6)
        run: echo "BROWSER=chrome" >> $GITHUB_ENV            
      - name: Display Variables
        run: echo "$DAY_OF_WEEK $BROWSER"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-external-id: ${{ secrets.ORG_RUNNER_AWS_EXTERNALID }}
          role-to-assume: arn:aws:iam::597123819409:role/vtx-GitHubActions
          aws-region: us-east-2
          role-skip-session-tagging: true
      - name: Install traceroute
        run: apt-get install -y traceroute
      - name: Run ping
        run: |
          ping -c 10 10.10.48.162
        continue-on-error: true
      - name: Run traceroute
        run: |
          traceroute 10.10.48.162
        continue-on-error: true
      - name: Run ip route
        run: |
          ip route
        continue-on-error: true
      - name: Install Cypress Chrome prerequisites
        if: env.BROWSER == 'chrome'
        run: apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb fonts-liberation xdg-utils libu2f-udev
      - name: Setup Chrome
        if: env.BROWSER == 'chrome'
        uses: browser-actions/setup-chrome@latest
      - name: Install Chrome
        if: env.BROWSER == 'chrome'
        run: wget -O /usr/src/google-chrome-stable_current_amd64.deb "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb" &&   dpkg -i /usr/src/google-chrome-stable_current_amd64.deb ;   apt-get install -f -y &&   rm -f /usr/src/google-chrome-stable_current_amd64.deb
      - name: Install Cypress prerequisites
        if: env.BROWSER == 'edge'
        run: apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb fonts-liberation xdg-utils gnupg
      - name: Install Edge
        if: env.BROWSER == 'edge'
        run: |
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
          sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
          sudo rm microsoft.gpg
          sudo apt update && sudo apt install -y microsoft-edge-stable
      - name: Configure Linux
        run: echo 16384 | sudo tee /proc/sys/fs/inotify/max_user_watches
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      - uses: actions/setup-node@v2
        with:
          node-version: '16.15.0'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@vertexinc'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GIT_PACKAGE_TOKEN }}
      - id: install-dependencies
        name: Install dependencies
        uses: bahmutov/npm-install@v1
      - name: Install dependencies (failure)
        if: failure() && steps.install-dependencies.outcome == 'failure'
        run: echo 'If a @vertexinc-scoped package failed to install, please ensure that the SystemTeamAutomation GitHub user has access to the repository that failed to install.  The GIT_PACKAGE_TOKEN secret (which is necessary to authorize the `npm install` command) is owned by that account and is only available to repos that that account has access to.'
      - name: Build
        run: npm run build:${{ env.NODE_ENV }}
      - id: cypress-e2e-tests
        name: Cypress end-to-end tests
        uses: cypress-io/github-action@v2
        with:
          wait-on: 'https://localhost:9001/vtx-ui-mf-taxcat.js'
          wait-on-timeout: 300
          start: npm run start:${{ env.NODE_ENV }}
          command: npm run cypress:run:e2e:${{ env.BROWSER }}:${{ env.NODE_ENV }}:xray  
          install: false
        env:
          NODE_TLS_REJECT_UNAUTHORIZED: 0
          cypress_accessKeyId: ${{ env.AWS_ACCESS_KEY_ID }}
          cypress_secretAccessKey: ${{ env.AWS_SECRET_ACCESS_KEY }}
          cypress_awsSessionToken: ${{ env.AWS_SESSION_TOKEN }}
      - name: Import e2e Results to XRay
        if: always()
        #xray-action uses the full commit SHA for the v2.4.2 Release (https://github.com/mikepenz/xray-action/releases/tag/v2.4.2) Fixes Auth issue, changed xray endpoint to https
        uses: mikepenz/xray-action@07bcd51904dc36926c3659ba9021dfd51e092055
        with:
          username: ${{ secrets.TCCA_JIRA_USER}}
          password: ${{ secrets.TCCA_JIRA_PASSWORD}}
          testFormat: "junit"
          testPaths: "cypress/results/*.xml"
          testExecKey: ${{env.TEST_EXECUTION_E2E_KEY}}
          testPlanKey: ${{env.TEST_PLAN_KEY}}
          testMerge: false
          projectKey: ${{env.PROJECT_KEY}}
          failOnImportError: true
      - name: Clean the Result Folder
        if: always()
        run: sudo rm -rf "/home/ubuntu/actions-runner/_work/vtx-ui-mf-taxcat/vtx-ui-mf-taxcat/cypress/results/*.xml"
      - id: cypress-functional-tests
        name: Cypress functional tests
        if: always()
        uses: cypress-io/github-action@v2
        with:
          wait-on: 'https://localhost:9001/vtx-ui-mf-taxcat.js'
          wait-on-timeout: 300
          start: npm run start:${{ env.NODE_ENV }}
          command: npm run cypress:run:fun:${{ env.BROWSER }}:${{ env.NODE_ENV }}:xray
          install: false
        env:
          NODE_TLS_REJECT_UNAUTHORIZED: 0
          cypress_accessKeyId: ${{ env.AWS_ACCESS_KEY_ID }}
          cypress_secretAccessKey: ${{ env.AWS_SECRET_ACCESS_KEY }}
          cypress_awsSessionToken: ${{ env.AWS_SESSION_TOKEN }}
      - name: Import Functional Test Results to XRay
        if: always()
        #xray-action uses the full commit SHA for the v2.4.2 Release (https://github.com/mikepenz/xray-action/releases/tag/v2.4.2) Fixes Auth issue, changed xray endpoint to https
        uses: mikepenz/xray-action@07bcd51904dc36926c3659ba9021dfd51e092055
        with:
          username: ${{ secrets.TCCA_JIRA_USER}}
          password: ${{ secrets.TCCA_JIRA_PASSWORD}}
          testFormat: "junit"
          testPaths: "cypress/results/*.xml"
          testExecKey: ${{env.TEST_EXECUTION_FUNCTIONAL_KEY}}
          testPlanKey: ${{env.TEST_PLAN_KEY}}
          testMerge: false
          projectKey: ${{env.PROJECT_KEY}}
          failOnImportError: true
      - name: Send Email
        if: |
          failure() &&
          (steps.cypress-e2e-tests.outcome == 'failure' || steps.cypress-functional-tests.outcome == 'failure')
        uses: vertexinc/vtx-actions-email-notifier@v0.0.4
        with:
          username: ${{secrets.AWS_SMTP_USERNAME}}
          password: ${{secrets.AWS_SMTP_PASSWORD}}
          subject: "Cypress Testing Results For ${{ env.NODE_ENV }} Environment"
          to: ${{env.EMAIL_RECIPIENT}}
          body: "The cypress tests are failing on ${{ env.NODE_ENV }} environment, execution results can be found here: https://vertexinc.atlassian.net/jira/dashboards/19045"