name: Run Sonar Qube Scanner Post Merge
on:
  push:
    branches:
      - main
jobs:
  sonarqube:
    continue-on-error: true
    # Vertex GitHub Action can only access AWS SQ server using self-hosted GitHub Runner defined below
    runs-on: [self-hosted, Standard]
    # The Container defined below will run job in it's own Docker container and is the recommended approach
    container:
      image: docker.binrepo.vtxdev.net/cloud-base-images/java17-maven3:latest
      credentials:
        username: ${{ secrets.AF_DOCKER_USER }}
        password: ${{ secrets.AF_DOCKER_PASS }}
    steps:
    - name: Checkout Repo Source for SQ Scanning
      uses: actions/checkout@v2
      # Sonar scanner needs full clone instead of shallow to properly link issues to the history
      with:
        fetch-depth: 0
    # SonarQube Scanner Github Action
    - name: SonarQube Scanner
      uses: sonarsource/sonarqube-scan-action@master
      with:
        # Args can be configured through Args section below or sonar-project.properties in your projectBaseDir
        # -Dsonar.projectKey - ID for the SQ Project (required)
        # -Dsonar.projectName - Name for the SQ Project, typically the same as ID (optional)
        args: >
          -Dsonar.projectKey=${{env.SQ_PROJECT_NAME}}
          -Dsonar.projectName=${{env.SQ_PROJECT_NAME}}
          -Dsonar.sources=src
      env:
        # SONAR_TOKEN, SONAR_HOST_URL - ORG defined secrets
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        # SQ_PROJECT_NAME Name of the Project sent over to SQ as projectKey and projectName
        SQ_PROJECT_NAME: "vtx-ui-mf-taxcat"
        
